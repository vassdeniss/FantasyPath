@model SaveViewModel

@{
    ViewData["Title"] = "Continue Adventure";
}

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-body">
            <h2 class="mb-4">Edit Save</h2>
            <form asp-controller="Save" asp-action="Edit" method="post">
                <input type="hidden" asp-for="@this.Model.Id" />
                <input type="hidden" asp-for="@this.Model.BookId" />
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="@this.Model.Skill" class="form-label">Skill</label>
                            <input asp-for="@this.Model.Skill" class="form-control" />
                            <span asp-validation-for="@this.Model.Skill" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="@this.Model.Stamina" class="form-label">Stamina</label>
                            <input asp-for="@this.Model.Stamina" class="form-control" />
                            <span asp-validation-for="@this.Model.Stamina" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="@this.Model.Luck" class="form-label">Luck</label>
                            <input asp-for="@this.Model.Luck" class="form-control" />
                            <span asp-validation-for="@this.Model.Luck" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="mb-4">
                    <label class="form-label">Inventory</label>
                    <div id="inventoryItems" class="mb-2">
                        @foreach (string item in this.Model.Inventory)
                        {
                            <div class="inventory-item d-inline-block me-2 mb-2">
                                <div class="input-group">
                                    <span class="input-group-text bg-light">@item</span>
                                    <button type="button" class="btn btn-danger" onclick="removeInventoryItem(this)">
                                        <i class="bi bi-x"></i>
                                    </button>
                                    <input type="hidden" name="Inventory" value="@item" />
                                </div>
                            </div>
                        }
                    </div>
                    <div class="input-group">
                        <input type="text" id="newInventoryItem" class="form-control" 
                               placeholder="Add new item..." />
                        <button type="button" class="btn btn-primary" onclick="addInventoryItem()">
                            <i class="bi bi-plus"></i> Add Item
                        </button>
                    </div>
                </div>
                <div class="d-flex justify-content-end gap-2">
                    <a asp-controller="Book" asp-action="Index" asp-route-id="@this.Model.BookId" 
                       class="btn btn-secondary">Cancel</a>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                </div>
            </form>
            <div class="card shadow-sm mt-4">
                <div class="card-body">
                    <h3 class="mb-4">Combat Manager</h3>
                    <div class="row g-4">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Enemy Skill</label>
                                <input type="number" id="enemySkill" class="form-control" min="1" max="12" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Enemy Stamina</label>
                                <input type="number" id="enemyStamina" class="form-control" min="1" max="24" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Current Enemy Stamina</label>
                                <input type="number" id="currentEnemyStamina" class="form-control" readonly />
                            </div>
                        </div>
                    </div>

                    <div class="d-grid gap-2 d-md-block mt-4">
                        <button class="btn btn-danger" onclick="startCombat()">
                            <i class="bi bi-crosshair"></i> Attack!
                        </button>
                        <button class="btn btn-warning" id="useLuckBtn" disabled onclick="testLuck()">
                            <i class="bi bi-stars"></i> Use Luck
                        </button>
                        <button class="btn btn-secondary" onclick="resetCombat()">
                            <i class="bi bi-escape"></i> Flee
                        </button>
                    </div>

                    <div id="combatLog" class="mt-3 alert alert-dark" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let currentCombat = {
        isActive: false,
        enemySkill: 0,
        initialEnemyStamina: 0,
        currentEnemyStamina: 0
    };

    function startCombat() {
        const enemySkill = parseInt(document.getElementById('enemySkill').value);
        const enemyStamina = parseInt(document.getElementById('enemyStamina').value);

        if (!enemySkill || !enemyStamina) {
            alert("Please enter enemy Skill and Stamina!");
            return;
        }
        
        if (currentCombat.isActive) {
            performCombatRound();
            return;
        }

        currentCombat = {
            isActive: true,
            enemySkill,
            initialEnemyStamina: enemyStamina,
            currentEnemyStamina: enemyStamina
        };

        document.getElementById('currentEnemyStamina').value = enemyStamina;
        document.getElementById('combatLog').style.display = 'block';
        document.getElementById('combatLog').innerHTML = '';
        performCombatRound();
    }

    function roll2d6() {
        return Math.floor(Math.random() * 6 + 1) + Math.floor(Math.random() * 6 + 1);
    }

    function updateCombatLog(message) {
        const log = document.getElementById('combatLog');
        log.innerHTML = `<div class="combat-log-entry">${message}</div>` + log.innerHTML;
    }

    function performCombatRound() {
        if (!currentCombat.isActive) return;

        const playerRoll = roll2d6();
        const enemyRoll = roll2d6();
        const playerSkill = parseInt(document.getElementById('Skill').value);
        const playerStamina = parseInt(document.getElementById('Stamina').value);
        const playerTotal = playerSkill + playerRoll;
        const enemyTotal = currentCombat.enemySkill + enemyRoll;

        let logEntry = `<div class="combat-round mb-2">
            <div>Player: ${playerRoll} Roll + ${playerSkill} Skill = <strong>${playerTotal}</strong></div>
            <div>Enemy: ${enemyRoll} Roll + ${currentCombat.enemySkill} Skill = <strong>${enemyTotal}</strong></div>`;

        if (playerTotal > enemyTotal) {
            currentCombat.currentEnemyStamina -= 2;
            document.getElementById('currentEnemyStamina').value = Math.max(currentCombat.currentEnemyStamina, 0);
            logEntry += `<div class="text-success">You strike the enemy! (-2 Stamina)</div>`;

            if (currentCombat.currentEnemyStamina <= 0) {
                logEntry += `<div class="text-success fw-bold">ENEMY DEFEATED!</div>`;
                resetCombat();
            }
        } else if (enemyTotal > playerTotal) {
            const newStamina = Math.max(playerStamina - 2, 0);
            document.getElementById('Stamina').value = newStamina;
            logEntry += `<div class="text-danger">Enemy hits you! (-2 Stamina)</div>`;

            if (newStamina <= 0) {
                logEntry += `<div class="text-danger fw-bold">GAME OVER! YOU HAVE DIED!</div>`;
                resetCombat();
            }
        } else {
            logEntry += `<div class="text-muted">Clash! No damage dealt</div>`;
        }

        logEntry += `</div>`;
        updateCombatLog(logEntry);
        updateCombatControls();
    }

    function resetCombat() {
        currentCombat.isActive = false;
        document.getElementById('currentEnemyStamina').value = '';
        document.getElementById('combatLog').innerHTML = '';
        document.getElementById('enemySkill').value = '';
        document.getElementById('enemyStamina').value = '';
    }

    function updateCombatControls() {
        const luck = parseInt(document.getElementById('Luck').value);
        document.getElementById('useLuckBtn').disabled = luck < 1 || !currentCombat.isActive;
    }

    function addInventoryItem() {
        const input = document.getElementById('newInventoryItem');
        const itemValue = input.value.trim();

        if (itemValue) {
            const inventoryDiv = document.getElementById('inventoryItems');

            const newItem = document.createElement('div');
            newItem.className = 'inventory-item d-inline-block me-2 mb-2';
            newItem.innerHTML = `
                    <div class="input-group">
                        <span class="input-group-text bg-light">${itemValue}</span>
                        <button type="button" class="btn btn-danger" onclick="removeInventoryItem(this)">
                            <i class="bi bi-x"></i>
                        </button>
                        <input type="hidden" name="Inventory" value="${itemValue}" />
                    </div>
                `;

            inventoryDiv.appendChild(newItem);
            input.value = '';
        }
    }

    function removeInventoryItem(button) {
        const itemDiv = button.closest('.inventory-item');
        itemDiv.remove();
    }

</script>
